import contextlib

from aiogram import Router, F
from aiogram.exceptions import TelegramAPIError
from aiogram.filters import StateFilter, Command, invert_f
from aiogram.types import Message

from filters import transfer_operation_amount_filter
from repositories import TransferRepository, BalanceRepository

__all__ = ('register_handlers',)


async def on_transfer_operation_amount_invalid(
        message: Message,
) -> None:
    await message.reply(
        '–ß—Ç–æ–±—ã –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥,'
        ' <b><u>–æ—Ç–≤–µ—Ç—å—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π</u></b> –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n'
        '<code>/send 100</code>, –≥–¥–µ <code>100</code> - –≤–∞—à–∞ —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞'
    )


async def on_create_transfer_in_group_chat(
        message: Message,
        amount: int,
        transfer_repository: TransferRepository,
        balance_repository: BalanceRepository,
) -> None:
    sender_id = message.from_user.id
    recipient_id = message.reply_to_message.from_user.id

    sender_balance = await balance_repository.get_user_balance(sender_id)
    if sender_balance.balance < amount:
        await message.reply('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ')
        return
    await transfer_repository.create(
        sender_id=sender_id,
        recipient_id=recipient_id,
        amount=amount,
    )
    await message.reply(
        text=f'‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—É–º–º—É –≤ {amount} –¥–∞–∫-–¥–∞–∫ –∫–æ–∏–Ω–æ–≤ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω',
    )

    recipient_balance = await balance_repository.get_user_balance(recipient_id)
    with contextlib.suppress(TelegramAPIError):
        await message.bot.send_message(
            recipient_id,
            f'‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å—É–º–º—É ${amount}\n'
            f'üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${recipient_balance.balance}',
        )


def register_handlers(router: Router) -> None:
    router.message.register(
        on_transfer_operation_amount_invalid,
        F.reply_to_message,
        Command('send'),
        invert_f(transfer_operation_amount_filter),
        StateFilter('*'),
    )
    router.message.register(
        on_create_transfer_in_group_chat,
        F.reply_to_message,
        invert_f(F.reply_to_message.from_user.is_bot),
        Command('send'),
        transfer_operation_amount_filter,
        StateFilter('*'),
    )
