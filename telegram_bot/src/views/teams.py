from collections.abc import Iterable

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from callback_data import (
    TeamDetailCallbackData,
    TeamDeleteAskForConfirmationCallbackData,
    TeamUpdateCallbackData,
)
from models import TeamIdAndName
from views.base import View

__all__ = (
    'TeamDetailView',
    'TeamListView',
    'TeamDeleteAskForConfirmationView',
)


class TeamDetailView(View):

    def __init__(self, team):
        self.__team = team

    def get_text(self) -> str:
        return

    def get_reply_markup(self) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text='üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏',
                        callback_data='',
                    ),
                ],
                [
                    InlineKeyboardButton(
                        text='üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É',
                        callback_data=TeamUpdateCallbackData().new(
                            team_id=self.__team.id,
                            field='name',
                        ),
                    )
                ],
                [
                    InlineKeyboardButton(
                        text='‚ùåüóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É',
                        callback_data=(
                            TeamDeleteAskForConfirmationCallbackData().new(
                                team_id=self.__team.id,
                            )
                        ),
                    ),
                ]
            ],
        )


class TeamListView(View):

    def __init__(self, teams: Iterable[TeamIdAndName]):
        self.__teams = tuple(teams)

    def get_text(self) -> str:
        return (
            '–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø'
            if self.__teams
            else '–£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Å–µ–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ'
        )

    def get_reply_markup(self) -> InlineKeyboardMarkup:
        markup = InlineKeyboardMarkup()
        for team in self.__teams:
            markup.row(
                InlineKeyboardButton(
                    text=team.name,
                    callback_data=TeamDetailCallbackData().new(
                        team_id=team.id,
                    ),
                )
            )
        markup.row(
            InlineKeyboardButton(
                text='‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É',
                callback_data='create-team',
            )
        )
        return markup


class TeamDeleteAskForConfirmationView(View):
    text = '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é –≥—Ä—É–ø–ø—É?'

    def __init__(self, team_id: int):
        self.__team_id = team_id

    def get_reply_markup(self) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text='üî• –£–¥–∞–ª–∏—Ç—å',
                        callback_data='confirm'
                    ),
                    InlineKeyboardButton(
                        text='‚ôªÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å',
                        callback_data=TeamDetailCallbackData().new(
                            team_id=self.__team_id,
                        )
                    )
                ],
            ],
        )
